##########
# Colors #
##########

D=$'\[\033[0m\]'
BLACK=$'\[\033[0;30m\]'
RED=$'\[\033[0;31m\]'
GREEN=$'\[\033[0;32m\]'
BROWN=$'\[\033[0;33m\]'
BLUE=$'\[\033[0;34m\]'
PURPLE=$'\[\033[0;35m\]'
CYAN=$'\[\033[0;36m\]'
LIGHT_GRAY=$'\[\033[0;37m\]'
DARK_GRAY=$'\[\033[1;30m\]'
LIGHT_RED=$'\[\033[1;31m\]'
LIGHT_GREEN=$'\[\033[1;32m\]'
YELLOW=$'\[\033[1;33m\]'
LIGHT_BLUE=$'\[\033[1;34m\]'
LIGHT_PURPLE=$'\[\033[1;35m\]'
LIGHT_CYAN=$'\[\033[1;36m\]'
WHITE=$'\[\033[1;37m\]'

############################
# The common prompt prefix #
############################
#BASEPROMPT="${RED}\u${LIGHT_GRAY}@${GREEN}\h ${BROWN}\$(short_pwd)"
BASEPROMPT="${RED}\u${LIGHT_GRAY} ${BROWN}\$(short_pwd)"

####################
# Git-aware prompt #
####################
__git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

##########################
# Mercurial-aware prompt #
##########################
__mercurial_branch() {
  hg branch 2> /dev/null | sed -e 's/^\(.*\)$/(\1)/' -e '/\\n/d'
}

###########################
# Subversion-aware prompt #
###########################
__subversion_branch() {
  local svn_info=`svn info 2> /dev/null`
  if [ "$svn_info" != "" ]; then
    local url=`printf "$svn_info" | grep "URL: " | sed -e "s/^URL: \(.*\)$/\1/"`
    local root=`printf "$svn_info" | grep "Repository Root: " | sed -e "s/^Repository Root: \(.*\)$/\1/"`
    relative_path="${url:${#root}}"
    if [ "$relative_path" == "/trunk" ]; then
      printf "(trunk)"
    elif [ "${relative_path:1:6}" == "trunk/" ]; then
      printf "(trunk)"
    elif [ "${relative_path:1:9}" == "branches/" ]; then
      local branch_name=`printf "$relative_path" | sed -e "s/^\/branches\/\(.*\)$/\1/" | sed -e "s/^\(.*\)\/.*$/\1/"`
      if [ -n "$branch_name" ]; then
        printf "($branch_name)"
      fi
    elif [ "${relative_path:1:5}" == "tags/" ]; then
      local tag_name=`printf "$relative_path" | sed -e "s/^\/tags\/\(.*\)$/\1/" | sed -e "s/^\(.*\)\/.*$/\1/"`
      if [ -n "$tag_name" ]; then
        printf "($tag_name)"
      fi
    fi
  fi
}

############################################
# Trim working dir to 1/4 the screen width #
############################################
short_pwd() {
  local pwdmaxlen=$((COLUMNS/4))
  local trunc_symbol=".."
  if [[ $PWD == $HOME* ]]; then
    newPWD="~${PWD#$HOME}" 
  else
    newPWD=${PWD}
  fi
  if [ ${#newPWD} -gt $pwdmaxlen ]; then
    local pwdoffset=$(( ${#newPWD} - $pwdmaxlen + 3 ))
    printf "${trunc_symbol}${newPWD:$pwdoffset:$pwdmaxlen}"
  else
    echo $newPWD
  fi
}

VCS_BRANCH="${PURPLE}\$(__subversion_branch)\$(__git_branch)\$(__mercurial_branch)${D}"


##############################
# Export the prompt variable #
##############################
export PS1="${BASEPROMPT}${VCS_BRANCH} \\$ "
